version: '3.7'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod

    restart: unless-stopped
    ports:
      - "80:80"
    env_file: /app/frontend.env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "8000:8000"
    env_file: /app/backend.env
    environment:
      - API_RSA_PUBLIC_KEY=/app/equal-shares-api-public-key.pem
      - API_RSA_PRIVATE_KEY=/app/equal-shares-api-private-key.pem
    volumes:
      - /app/keys/equal-shares-api-public-key.pem:/app/equal-shares-api-public-key.pem
      - /app/keys/equal-shares-api-private-key.pem:/app/equal-shares-api-private-key.pem

  db:
    image: postgres:16
    restart: unless-stopped

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 10s
      retries: 120
    ports:
      - "5432:5432"
    env_file: /app/db.env
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
